apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "neon-compute.fullname" . }}-replica
  labels:
    {{- include "neon-compute.labels" . | nindent 4 }}
data:
  spec.json: |
    {
      "format_version": 1.0,
      "mode": "Replica",
      "pageserver_connstring": "host={{ .Values.pageserver.host }} port={{ .Values.pageserver.port }}",
      "safekeeper_connstrings": [],
      "tenant_id": "{{ .Values.tenantId }}",
      "timeline_id": "{{ .Values.timelineId }}",
      "cluster": {
        "roles": [],
        "databases": [],
        "settings": [
          {
              "name": "listen_addresses",
              "value": "0.0.0.0",
              "vartype": "string"
          },
          {
              "name": "max_wal_senders",
              "value": "10",
              "vartype": "integer"
          },
          {
              "name": "wal_log_hints",
              "value": "on",
              "vartype": "bool"
          },
          {
              "name": "max_replication_slots",
              "value": "10",
              "vartype": "integer"
          },
          {
              "name": "shared_buffers",
              "value": "1MB",
              "vartype": "string"
          },
          {
              "name": "fsync",
              "value": "off",
              "vartype": "bool"
          },
          {
              "name": "max_connections",
              "value": "100",
              "vartype": "integer"
          },
          {
              "name": "wal_level",
              "value": "logical",
              "vartype": "enum"
          },
          {
              "name": "wal_sender_timeout",
              "value": "5s",
              "vartype": "string"
          },
          {
              "name": "wal_keep_size",
              "value": "0",
              "vartype": "integer"
          },
          {
              "name": "restart_after_crash",
              "value": "off",
              "vartype": "bool"
          },
          {
              "name": "shared_preload_libraries",
              "value": "neon",
              "vartype": "string"
          },
          {
              "name": "hot_standby",
              "value": "on",
              "vartype": "bool"
          },
          {
              "name": "primary_conninfo",
              "value": "host={{ range $index, $safekeeper := .Values.safekeepers }}{{ if ne $index 0 }},{{ end }}{{ $safekeeper.host }}{{ end }} port={{ range $index, $safekeeper := .Values.safekeepers }}{{ if ne $index 0 }},{{ end }}{{ $safekeeper.port }}{{ end }} options='-c timeline_id={{ .Values.timelineId }} tenant_id={{ .Values.tenantId }}' application_name=replica replication=true",
              "vartype": "string"
          },
          {
              "name": "primary_slot_name",
              "value": "repl_{{ .Values.timelineId }}_",
              "vartype": "string"
          },
          {
              "name": "recovery_prefetch",
              "value": "off",
              "vartype": "bool"
          }
        ]
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "neon-compute.fullname" . }}-replica
  labels:
    {{- include "neon-compute.replica.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replica.count }}
  selector:
    matchLabels:
      {{- include "neon-compute.replica.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.replica.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "neon-compute.replica.labels" . | nindent 8 }}
        {{- with .Values.replica.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: compute-node
        image: {{ .Values.replica.image.repository }}:{{ .Values.replica.image.tag }}
        imagePullPolicy: {{ .Values.replica.image.pullPolicy }}
        command: 
        - sh
        - -c
        - |
          compute_ctl \
            --pgdata=/var/db/postgres/compute \
            --connstr=postgresql://cloud_admin@0.0.0.0:5432/postgres \
            --pgbin=/usr/local/bin/postgres \
            --spec-path=/tmp/spec.json
        env:
        - name: OTEL_SDK_DISABLED
          value: "true"
        ports:
        - name: http
          containerPort: 3080
          protocol: TCP
        - name: pg
          containerPort: 5432
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /status
            port: http
        resources:
          {{- toYaml .Values.replica.resources | nindent 12 }}
        volumeMounts:
        - name: compute-node-spec
          mountPath: /tmp/spec.json
          subPath: spec.json
      volumes:
      - name: compute-node-spec
        configMap:
          name: {{ include "neon-compute.fullname" . }}-replica
          items:
          - key: spec.json
            path: spec.json
      {{- with .Values.replica.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.replica.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.replica.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "neon-compute.fullname" . }}-replica
  labels:
    {{- include "neon-compute.replica.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    {{- include "neon-compute.replica.labels" . | nindent 4 }}
  ports:
  - name: http
    targetPort: http
    protocol: TCP
    port: 80
  - name: pg
    targetPort: pg
    protocol: TCP
    port: 5432
