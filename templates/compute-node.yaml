apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "neon.fullname" . }}-compute-node
  labels:
    {{- include "neon.computeNode.labels" . | nindent 4 }}
data:
  spec.json: |
    {
      "format_version": 1.0,
      "pageserver_connstring": "host={{ include "neon.fullname" . }}-pageserver port=80",
      "safekeeper_connstrings": [
        "{{ include "neon.fullname" . }}-safekeeper-0.{{ include "neon.fullname" . }}-safekeeper.{{ .Release.Namespace }}.svc.cluster.local:5454",
        "{{ include "neon.fullname" . }}-safekeeper-1.{{ include "neon.fullname" . }}-safekeeper.{{ .Release.Namespace }}.svc.cluster.local:5454",
        "{{ include "neon.fullname" . }}-safekeeper-2.{{ include "neon.fullname" . }}-safekeeper.{{ .Release.Namespace }}.svc.cluster.local:5454"
      ],
      "tenant_id": "9ef87a5bf0d92544f6fafeeb3239695c",
      "timeline_id": "de200bd42b49cc1814412c7e592dd6e9",
      "cluster": {
        "roles": [],
        "databases": [],
        "settings": [
          {
              "name": "listen_addresses",
              "value": "0.0.0.0",
              "vartype": "string"
          }
        ]
      }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "neon.fullname" . }}-compute-node
  labels:
    {{- include "neon.computeNode.labels" . | nindent 4 }}
type: Opaque
data:
  connstr_username: {{ .Values.auth.username | b64enc }}
  {{- with .Values.auth.password }}
  connstr_password: {{ . | b64enc }}
  {{- end }}
  connstr_database: {{ .Values.auth.database | b64enc }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "neon.fullname" . }}-compute-node
  labels:
    {{- include "neon.computeNode.labels" . | nindent 4 }}
spec:
  replicas: 3
  selector:
    matchLabels:
      {{- include "neon.computeNode.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.computeNode.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "neon.computeNode.labels" . | nindent 8 }}
        {{- with .Values.computeNode.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
      - name: pageserver-wait
        image: busybox:1.28
        command:
        - sh
        - -c
        - |
          until wget -O - http://{{ include "neon.fullname" . }}-pageserver/v1/status
          do echo waiting for pageserver
          sleep 2
          done
      - name: safekeeper-wait
        image: busybox:1.28
        command: 
        - sh
        - -c
        - |
          until wget -O - http://{{ include "neon.fullname" . }}-safekeeper/v1/status
          do echo waiting for safekeeper
          sleep 2
          done
      containers:
      - name: compute-node
        image: {{ .Values.computeNode.image.repository }}:{{ .Values.computeNode.image.tag }}
        imagePullPolicy: {{ .Values.computeNode.image.pullPolicy }}
        command: 
        - sh
        - -c
        - |
          compute_ctl \
            --pgdata=/var/db/postgres/compute \
            --connstr=postgresql://${CONNSTR_USERNAME}{{ if .Values.auth.password }}:${CONNSTR_PASSWORD}{{ end }}@0.0.0.0:5432/${CONNSTR_DATABASE} \
            --pgbin=/usr/local/bin/postgres \
            --spec-path=/tmp/spec.json
        env:
        - name: CONNSTR_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ include "neon.fullname" . }}-compute-node
              key: connstr_username
        {{- if .Values.auth.password }}
        - name: CONNSTR_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "neon.fullname" . }}-compute-node
              key: connstr_password
        {{- end }}
        - name: CONNSTR_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ include "neon.fullname" . }}-compute-node
              key: connstr_database
        - name: OTEL_SDK_DISABLED
          value: "true"
        ports:
        - name: http
          containerPort: 3080
          protocol: TCP
        - name: pg
          containerPort: 5432
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /status
            port: http
        resources:
          {{- toYaml .Values.computeNode.resources | nindent 12 }}
        volumeMounts:
        - name: compute-node-spec
          mountPath: /tmp/spec.json
          subPath: spec.json
        - name: compute-node-data
          mountPath: /data/.neon
      volumes:
      - name: compute-node-spec
        configMap:
          name: {{ include "neon.fullname" . }}-compute-node
          items:
          - key: spec.json
            path: spec.json
      {{- with .Values.computeNode.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.computeNode.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.computeNode.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: compute-node-data
      labels:
        {{- include "neon.computeNode.labels" . | nindent 4 }}
    spec:
      {{- with .Values.computeNode.storage.className }}
      storageClassName: {{ . }}
      {{- end }}
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.computeNode.storage.capacity }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "neon.fullname" . }}-compute-node
  labels:
    {{- include "neon.computeNode.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    {{- include "neon.computeNode.labels" . | nindent 4 }}
  ports:
  - name: http
    targetPort: http
    protocol: TCP
    port: 80
  - name: pg
    targetPort: pg
    protocol: TCP
    port: 5432
